{"ast":null,"code":"import _classCallCheck from\"/Users/dylannirvanahome/Desktop/Freelance/VersatileToneGroup/versatile-server/vtg-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dylannirvanahome/Desktop/Freelance/VersatileToneGroup/versatile-server/vtg-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/dylannirvanahome/Desktop/Freelance/VersatileToneGroup/versatile-server/vtg-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dylannirvanahome/Desktop/Freelance/VersatileToneGroup/versatile-server/vtg-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{// Route, \nLink}from'react-router-dom';// NOTE: artists.js and clients.js are handling parameterized GET requests. \n// FIXME: Bootstrap gallery of Artists || Clients? Problem is, they do not yet have a roster. What do I present instead? By using media.js instead \n// TODO: UI bootstrap gallery\n// TODO: API use parameterized GET request to go to profile.js (artist, client)\nvar Artists=/*#__PURE__*/function(_React$Component){_inherits(Artists,_React$Component);var _super=_createSuper(Artists);function Artists(){_classCallCheck(this,Artists);return _super.apply(this,arguments);}_createClass(Artists,[{key:\"render\",value:function render(){var params=this.props.match.params;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Artist Roster\"),/*#__PURE__*/React.createElement(\"p\",null,\"Server is handling GET requests. Select from menu below. Or type in arbitrary number in address bar (after /).\"),/*#__PURE__*/React.createElement(\"p\",null,\"User id: \",params.id),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{to:\"/artists/1\"},\"User 1 \")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{to:\"/artists/2\"},\"User 2 \")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{to:\"/artists/3\"},\"User 3 \"))));}}]);return Artists;}(React.Component);export default Artists;","map":{"version":3,"sources":["/Users/dylannirvanahome/Desktop/Freelance/VersatileToneGroup/versatile-server/vtg-server/client/src/routes/artists.js"],"names":["React","Link","Artists","params","props","match","id","Component"],"mappings":"w0BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACI;AACAC,IAFJ,KAGO,kBAHP,CAKA;AACA;AACA;AACA;GAEMC,CAAAA,O,+PACO,IACGC,CAAAA,MADH,CACc,KAAKC,KAAL,CAAWC,KADzB,CACGF,MADH,CAEL,mBACI,4CACI,8CADJ,cAEI,8IAFJ,cAGI,yCAAaA,MAAM,CAACG,EAApB,CAHJ,cAII,2CACI,2CACI,oBAAC,IAAD,EAAM,EAAE,CAAC,YAAT,YADJ,CADJ,cAII,2CACI,oBAAC,IAAD,EAAM,EAAE,CAAC,YAAT,YADJ,CAJJ,cAOI,2CACI,oBAAC,IAAD,EAAM,EAAE,CAAC,YAAT,YADJ,CAPJ,CAJJ,CADJ,CAmBH,C,qBAtBiBN,KAAK,CAACO,S,EAyB5B,cAAeL,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { \n    // Route, \n    Link \n} from 'react-router-dom';\n\n// NOTE: artists.js and clients.js are handling parameterized GET requests. \n// FIXME: Bootstrap gallery of Artists || Clients? Problem is, they do not yet have a roster. What do I present instead? By using media.js instead \n// TODO: UI bootstrap gallery\n// TODO: API use parameterized GET request to go to profile.js (artist, client)\n\nclass Artists extends React.Component {\n    render() {\n        const { params } = this.props.match;\n        return (\n            <div>\n                <h2>Artist Roster</h2>\n                <p>Server is handling GET requests. Select from menu below. Or type in arbitrary number in address bar (after /).</p>\n                <p>User id: {params.id}</p>\n                <ul>\n                    <li>\n                        <Link to=\"/artists/1\">User 1 </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/artists/2\">User 2 </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/artists/3\">User 3 </Link>\n                    </li>\n                </ul>\n                {/* <Route path=\"/users/:id\" component={User} /> */}\n            </div>\n        )\n    }\n}\n\nexport default Artists;"]},"metadata":{},"sourceType":"module"}